version: '3.7'

services:
  db:
    image: 'postgres:latest'
    container_name: postgres_service
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - service_data:/var/lib/postgresql/data/
    networks:
      - django_network

  web:
    restart: always
    build: .
    container_name: backend_service
    ports:
      - "8000:8000"
    command: ["/entrypoint.sh"]
    environment:
      - PYTHONUNBUFFERED=True
    env_file:
      - .env
    volumes:
      - .:/code
    links:
      - db:db
    depends_on:
      - db
    networks:
      - django_network

  redis:
    image: "redis:alpine"
    restart: always
    container_name: redis_container
    command: redis-server --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    ports:
      - "6379:6379"
    networks:
      - django_network

  celery:
    build: .
    command: celery -A core worker --loglevel=info
    container_name: celery_container_service
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - redis
      - web
    networks:
      - django_network

#  celery-beat:
#    build: .
#    command: /bin/sh -c "rm -f celerybeat-schedule && celery -A core beat --loglevel=info"
#    container_name: celery_beat_service
#    volumes:
#      - .:/code
#    env_file:
#      - .env
#    depends_on:
#      - redis
#      - web
#    networks:
#      - django_network

volumes:
  service_data:
    driver: local

networks:
  django_network:
    driver: bridge